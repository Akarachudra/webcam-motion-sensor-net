<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="appSettings" xml:space="preserve">
    <value>Application settings</value>
  </data>
  <data name="appStarted" xml:space="preserve">
    <value>Application started</value>
  </data>
  <data name="appStoped" xml:space="preserve">
    <value>Application stoped</value>
  </data>
  <data name="beginDetection" xml:space="preserve">
    <value>Begin detection on startup</value>
  </data>
  <data name="browse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="capturingSettings" xml:space="preserve">
    <value>Capturing settings</value>
  </data>
  <data name="capturingStarted" xml:space="preserve">
    <value>Capturing started</value>
  </data>
  <data name="capturingStoped" xml:space="preserve">
    <value>Capturing stoped</value>
  </data>
  <data name="device" xml:space="preserve">
    <value>Device</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="fileUploadException" xml:space="preserve">
    <value>File upload exception</value>
  </data>
  <data name="googleDrive" xml:space="preserve">
    <value>Google Drive</value>
  </data>
  <data name="language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="log" xml:space="preserve">
    <value>Log</value>
  </data>
  <data name="minimizeToTray" xml:space="preserve">
    <value>Minimize to tray on startup</value>
  </data>
  <data name="minutes" xml:space="preserve">
    <value>min</value>
  </data>
  <data name="motionDetected" xml:space="preserve">
    <value>Motion detected</value>
  </data>
  <data name="motionSensorSensitivity" xml:space="preserve">
    <value>Motion sensor sensitivity</value>
  </data>
  <data name="ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="previewWindow" xml:space="preserve">
    <value>Preview Window</value>
  </data>
  <data name="runWithWindows" xml:space="preserve">
    <value>Run with Windows</value>
  </data>
  <data name="saveCopiesTo" xml:space="preserve">
    <value>Save copies to (will be deleted after send)</value>
  </data>
  <data name="saveFrameToFile" xml:space="preserve">
    <value>Save frame to file</value>
  </data>
  <data name="saveTo" xml:space="preserve">
    <value>Save snapshots to</value>
  </data>
  <data name="seconds" xml:space="preserve">
    <value>sec</value>
  </data>
  <data name="selectedDevice" xml:space="preserve">
    <value>Selected device</value>
  </data>
  <data name="settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="settingsApplyError" xml:space="preserve">
    <value>Settings apply error</value>
  </data>
  <data name="showDateTime" xml:space="preserve">
    <value>Show date and time</value>
  </data>
  <data name="showPreview" xml:space="preserve">
    <value>Show preview</value>
  </data>
  <data name="snapshotsInterval" xml:space="preserve">
    <value>Snapshots interval</value>
  </data>
  <data name="snapshotsOnlyByInterval" xml:space="preserve">
    <value>Capture snapshots only by interval (disable motion sensor)</value>
  </data>
  <data name="start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="startDelay" xml:space="preserve">
    <value>Capturing start delay</value>
  </data>
  <data name="startDelayedTo" xml:space="preserve">
    <value>Start delayed to</value>
  </data>
  <data name="stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="telegramCode" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="telegramGetCode" xml:space="preserve">
    <value>Get code</value>
  </data>
  <data name="telegramLogin" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="telegramNotify" xml:space="preserve">
    <value>Send motion detection notifications to Telegram</value>
  </data>
  <data name="telegramPhoneNumber" xml:space="preserve">
    <value>Phone number (example 79991234567)</value>
  </data>
  <data name="telegramSessionStatus" xml:space="preserve">
    <value>Session status</value>
  </data>
  <data name="telegramStatusActive" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="telegramStatusChecking" xml:space="preserve">
    <value>Checking</value>
  </data>
  <data name="telegramStatusInactive" xml:space="preserve">
    <value>Not active</value>
  </data>
  <data name="uploadFileToGoogleDrive" xml:space="preserve">
    <value>Upload file to Google Drive. Path to file</value>
  </data>
  <data name="uploadToGoogleDrive" xml:space="preserve">
    <value>Upload copies to Google Drive</value>
  </data>
</root>